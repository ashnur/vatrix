{
  "name": "rationals",
  "version": "0.0.3",
  "description": "rational numbers with operations",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ashnur/rationals.git"
  },
  "keywords": [
    "rationals",
    "rational",
    "numbers"
  ],
  "author": {
    "name": "ashnur"
  },
  "license": "DAFUQ",
  "readmeFilename": "README.md",
  "gitHead": "4b063709112077adf62418576c9d193adc0485c8",
  "readme": "# rationals\n_extended rational number type for javascript_\n\nWhy I think this lib is great:\n\n- Representing fractions is not just easy, but it's natural. This is what\nrational numbers do best. Operations like `0.1 + 0.2` are a pain in js,\nbut using rational numbers, it's just: `r(1,10).plus(1,5) === r(3,10)`\n\n- This lib provides a type of object which will work with 1/0 or 0/0 just as well.\nThis is especially useful if you plan to plot values on a graph.\n\nI've got the inspiration for this lib from here: [MF105: The extended rational numbers in practice](http://www.youtube.com/watch?v=YMQkLojL2ek)\n\n\n\n# Examples\n```\nvar r = require('rationals');\n\nr(1,1) === r(1); // true\n\nr(2,4) === r(13,26); // true\n\nr(100,50) === r(2); // true\n\nr(1,2).plus(r(1,3)).minus(r(1,4)).times(r(1,5)).per(r(1,6)) === r(49,70); // true\n\nr(355,113).val(); // 3.1415929203539825\n\n\n```\n\n# API\n_a & b are objects created with the rationals() function_\n\n#### Addition\n- plus\n\n    `a.plus(b)`\n\n#### Subtraction\n- minus\n\n    `a.minus(b)`\n\n#### Multiplication\n- times\n\n    `a.times(b)`\n\n#### Division\n- per\n\n    `a.per(b)`\n\n#### Examining\n- toString\n\n    Examining an object can be hard, but if you cast it to a string: `r(355,113)+''` will return `'355/113'`.\n\n    So will `r(625/125).toString()` return `'5/1'`.\n\n#### Display\n- display\n\n    Just like toString(), but the numerator will be shown only if it's not 1. That is, integers will appear without a slash and a denominator.\n\n    `r(625/125).display()` returns `'5'`.\n\n#### Approximation\n- val\n\n    Will return the numerator divided with the denominator.\n\n    `r(355,113).val(); //3.1415929203539825`\n\n# Install\n```\nnpm install rationals\n```\n\n**You can use it with [browserify](http://browserify.org/) in the browser**\nTo be honest, you can use it without browserify too, this it's just a module,\nand it does not uses any kind of external libraries or other modules.\nBut browserify is awesome, so use it.\n",
  "_id": "rationals@0.0.3",
  "_from": "rationals@"
}
