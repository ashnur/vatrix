{
  "name": "zippy",
  "description": "zip() and zipWith() for Node.js!",
  "version": "0.0.3",
  "homepage": "https://github.com/jesusabdullah/node-zippy",
  "repository": {
    "type": "git",
    "url": "git@github.com:jesusabdullah/node-zippy.git"
  },
  "author": {
    "name": "Joshua Holbrook",
    "email": "josh.holbrook@gmail.com",
    "url": "http://jesusabdullah.github.com"
  },
  "main": "zippy.js",
  "scripts": {
    "test": "node ./test/tests.js"
  },
  "readme": "# zippy\n\nzippy is a tiny library that implements the `zip` and the more general `zipWith`. It was factored out of the \"hempwick\" project, since it's the only part of it I've used regularly and the project was too big for me to maintain.\n\n# Install\n\n    npm install zippy\n\n# Methods:\n\n### zip(xs, ys, ...)\n\nReturns a list with elements (x_i, y_i, ...). For example:\n\n    > zippy.zip([1, 2, 3], [1, 4, 9])\n    [[1, 1], [2, 4], [3, 9]]\n\n`zip` may take more than two arguments.\n\n**protip:**\n\n    > var transpose = function(a) { return zippy.zip.apply(null, M); };\n\n### zipWith(fxn, xs, ys, ...)\n\n`zipWith` is a more general form of `zip`, which takes a function that \"does\nsomething\" with each set of x_i, y_i. In fact, `zip` is implemented with\n`zipWith`! For an example:\n\n    > zippy.zipWith(function(x,y) {return x+y;}, [1, 2, 3], [3, 2, 1])\n    [4, 4, 4]\n\n# Testing\n\n    npm test\n\n# Pull requests?\n\nWhy yes, I *would* be interested!\n\n# License\n\nMIT.\n",
  "readmeFilename": "README.md",
  "_id": "zippy@0.0.3",
  "dist": {
    "shasum": "8f885248b29640636a3ce6f03d566313ebd47f58"
  },
  "_from": "zippy@",
  "_resolved": "https://registry.npmjs.org/zippy/-/zippy-0.0.3.tgz"
}
